{
  "AWSTemplateFormatVersion" : "2010-09-09",
  
  "Description" : "AWS cloud formation template for enabling encryption/decryption of KMS keys by account's - AccountA, AccountB AccountC. The keys are created and kept in AccountD ",
  
  "Parameters" : {      
      "KeyOwner": {
      "Description" : "Account alias of key owner and creator",
      "Type": "String",
      "ConstraintDescription" : "must be the of an existing account",
	   "Default": "AccountsD"
    },
      "KeyClient": {
      "Description" : "Account alias of key consumer",
      "Type": "String",
      "ConstraintDescription" : "must be the of an existing account",
	  "AllowedValues":["AccountsA", "AccountsB", "AccountsC"],
	   "Default": "AccountsA"
    }
		
  },
  
  "Mappings":{
    "AccountInfo": {
	"AccountsD":{ "AccNum" : "100000000000", "KeyAlias" : "alias/AccountD" },
	"AccountsA":{ "AccNum" : "211111111111", "KeyAlias" : "alias/AccountA" },
	"AccountsB":{ "AccNum" : "322222222222", "KeyAlias" : "alias/AccountB" },
	"AccountsC":{ "AccNum" : "433333333333", "KeyAlias" : "alias/AccountC" }
	}  
  },
    
  "Resources" : {        
    "myKey": {
   "Type" : "AWS::KMS::Key",
   "Properties" : {
    "Description" : "Key for remote account",
    "KeyPolicy" : {
      "Version": "2012-10-17",
      "Id": "kms-key-policy",
      "Statement": [{
		 "Sid": "Enable IAM User Permissions",
         "Effect": "Allow",
         "Principal": {"AWS":{"Fn::Join":["", ["arn:aws:iam::", {"Fn::FindInMap" : ["AccountInfo", {"Ref":"KeyOwner"}, "AccNum" ]}    , ":user/admin"  ]] }},
         "Action": "kms:*",
         "Resource": "*"
      },

     {
       "Sid": "Allow use of the key",
       "Effect": "Allow",
	   "Principal": {"AWS":[{"Fn::Join":["", ["arn:aws:iam::", {"Fn::FindInMap" : ["AccountInfo", {"Ref":"KeyClient"}, "AccNum" ]}, ":root"]] },
		                   {"Fn::Join":["", ["arn:aws:iam::", {"Fn::FindInMap" : ["AccountInfo", {"Ref":"KeyClient"}, "AccNum" ]}, ":user/admin"]] }]}
          "Action": [
            "kms:Encrypt",
            "kms:Decrypt",
            "kms:ReEncrypt*",
            "kms:GenerateDataKey*",
            "kms:DescribeKey"
            ],
          "Resource": "*"
    },
    {
      "Sid": "Allow attachment of persistent resources",
      "Effect": "Allow",
      "Principal": {"AWS": [
                            {"Fn::Join":["", ["arn:aws:iam::", {"Fn::FindInMap" : ["AccountInfo", {"Ref":"KeyClient"}, "AccNum" ]}, ":root"]] },
		                    {"Fn::Join":["", ["arn:aws:iam::", {"Fn::FindInMap" : ["AccountInfo", {"Ref":"KeyClient"}, "AccNum" ]}, ":user/admin"]] }]}      "Action": [
        "kms:CreateGrant",
        "kms:ListGrants",
        "kms:RevokeGrant"
      ],
      "Resource": "*",
      "Condition": {"Bool": {"kms:GrantIsForAWSResource": "true"}}
    }
  ]	
	   }
	 }
	},
	
  	"Alias" : {
    "Type" : "AWS::KMS::Alias",
    "Properties" : {
    "AliasName" : {"Fn::FindInMap" : ["AccountInfo", {"Ref":"KeyClient"}, "KeyAlias" ]}, 
    "TargetKeyId" :  {"Ref": "myKey"} 
     }
    }	
  },
  
  "Outputs" : {
    "AccountKeys" : {
      "Description" : "Arn for keys",
      "Value" : { "Fn::Join" : [" ", ["Key", {"Ref":"KeyClient"} , { "Fn::GetAtt" : [ "myKey", "Arn"]}]] },
	  "Export": {"KeyArn":{ "Fn::GetAtt" : [ "myKey", "Arn"]}}
    }
  }
}